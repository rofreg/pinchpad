//
// Generated by CocoaPods-Keys
// on 17/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[5411], PinchPadKeysData[5998], PinchPadKeysData[4133], PinchPadKeysData[3389], PinchPadKeysData[4684], PinchPadKeysData[4544], PinchPadKeysData[5025], PinchPadKeysData[250], PinchPadKeysData[5696], PinchPadKeysData[491], PinchPadKeysData[5183], PinchPadKeysData[5789], PinchPadKeysData[912], PinchPadKeysData[3859], PinchPadKeysData[1606], PinchPadKeysData[403], PinchPadKeysData[2009], PinchPadKeysData[3453], PinchPadKeysData[2481], PinchPadKeysData[3031], PinchPadKeysData[2854], PinchPadKeysData[1269], PinchPadKeysData[2797], PinchPadKeysData[3146], PinchPadKeysData[1310], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4740], PinchPadKeysData[4656], PinchPadKeysData[3405], PinchPadKeysData[2158], PinchPadKeysData[2467], PinchPadKeysData[2151], PinchPadKeysData[2015], PinchPadKeysData[1116], PinchPadKeysData[1505], PinchPadKeysData[607], PinchPadKeysData[863], PinchPadKeysData[4900], PinchPadKeysData[4434], PinchPadKeysData[2990], PinchPadKeysData[355], PinchPadKeysData[2524], PinchPadKeysData[1373], PinchPadKeysData[162], PinchPadKeysData[6264], PinchPadKeysData[208], PinchPadKeysData[5474], PinchPadKeysData[4812], PinchPadKeysData[5613], PinchPadKeysData[1299], PinchPadKeysData[1534], PinchPadKeysData[3775], PinchPadKeysData[1688], PinchPadKeysData[1073], PinchPadKeysData[3431], PinchPadKeysData[3902], PinchPadKeysData[3086], PinchPadKeysData[2735], PinchPadKeysData[5976], PinchPadKeysData[5076], PinchPadKeysData[2434], PinchPadKeysData[3200], PinchPadKeysData[1286], PinchPadKeysData[744], PinchPadKeysData[5138], PinchPadKeysData[225], PinchPadKeysData[3090], PinchPadKeysData[349], PinchPadKeysData[4446], PinchPadKeysData[5928], PinchPadKeysData[4448], PinchPadKeysData[4667], PinchPadKeysData[6156], PinchPadKeysData[5037], PinchPadKeysData[2259], PinchPadKeysData[1157], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[3759], PinchPadKeysData[3663], PinchPadKeysData[5982], PinchPadKeysData[5563], PinchPadKeysData[5971], PinchPadKeysData[3863], PinchPadKeysData[448], PinchPadKeysData[4412], PinchPadKeysData[2202], PinchPadKeysData[1785], PinchPadKeysData[1342], PinchPadKeysData[157], PinchPadKeysData[5111], PinchPadKeysData[5418], PinchPadKeysData[1809], PinchPadKeysData[692], PinchPadKeysData[3564], PinchPadKeysData[3149], PinchPadKeysData[2128], PinchPadKeysData[2618], PinchPadKeysData[5555], PinchPadKeysData[3290], PinchPadKeysData[5135], PinchPadKeysData[124], PinchPadKeysData[2106], PinchPadKeysData[5580], PinchPadKeysData[4877], PinchPadKeysData[1761], PinchPadKeysData[5009], PinchPadKeysData[996], PinchPadKeysData[983], PinchPadKeysData[4163], PinchPadKeysData[5339], PinchPadKeysData[2783], PinchPadKeysData[3407], PinchPadKeysData[1966], PinchPadKeysData[3970], PinchPadKeysData[1025], PinchPadKeysData[5246], PinchPadKeysData[2239], PinchPadKeysData[1267], PinchPadKeysData[1149], PinchPadKeysData[1477], PinchPadKeysData[2254], PinchPadKeysData[2435], PinchPadKeysData[2320], PinchPadKeysData[760], PinchPadKeysData[521], PinchPadKeysData[972], PinchPadKeysData[980], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4838], PinchPadKeysData[1421], PinchPadKeysData[2060], PinchPadKeysData[2946], PinchPadKeysData[1948], PinchPadKeysData[4792], PinchPadKeysData[1256], PinchPadKeysData[4031], PinchPadKeysData[609], PinchPadKeysData[128], PinchPadKeysData[4960], PinchPadKeysData[3781], PinchPadKeysData[3413], PinchPadKeysData[5478], PinchPadKeysData[1538], PinchPadKeysData[669], PinchPadKeysData[3371], PinchPadKeysData[5648], PinchPadKeysData[5874], PinchPadKeysData[4921], PinchPadKeysData[2726], PinchPadKeysData[231], PinchPadKeysData[842], PinchPadKeysData[4170], PinchPadKeysData[2869], PinchPadKeysData[4471], PinchPadKeysData[5313], PinchPadKeysData[838], PinchPadKeysData[2542], PinchPadKeysData[18], PinchPadKeysData[1403], PinchPadKeysData[3679], PinchPadKeysData[375], PinchPadKeysData[6050], PinchPadKeysData[5332], PinchPadKeysData[3599], PinchPadKeysData[5110], PinchPadKeysData[3423], PinchPadKeysData[4043], PinchPadKeysData[5627], PinchPadKeysData[3277], PinchPadKeysData[4847], PinchPadKeysData[5125], PinchPadKeysData[2827], PinchPadKeysData[752], PinchPadKeysData[3501], PinchPadKeysData[3986], PinchPadKeysData[5432], PinchPadKeysData[3793], PinchPadKeysData[2773], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[6302] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
