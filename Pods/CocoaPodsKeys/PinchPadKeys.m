//
// Generated by CocoaPods-Keys
// on 17/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[2491], PinchPadKeysData[3243], PinchPadKeysData[1068], PinchPadKeysData[5148], PinchPadKeysData[3488], PinchPadKeysData[3969], PinchPadKeysData[548], PinchPadKeysData[5731], PinchPadKeysData[137], PinchPadKeysData[1305], PinchPadKeysData[5303], PinchPadKeysData[4498], PinchPadKeysData[1276], PinchPadKeysData[4614], PinchPadKeysData[2361], PinchPadKeysData[3440], PinchPadKeysData[2710], PinchPadKeysData[2947], PinchPadKeysData[2337], PinchPadKeysData[1923], PinchPadKeysData[2645], PinchPadKeysData[5134], PinchPadKeysData[656], PinchPadKeysData[5631], PinchPadKeysData[272], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2117], PinchPadKeysData[2827], PinchPadKeysData[3959], PinchPadKeysData[406], PinchPadKeysData[4848], PinchPadKeysData[305], PinchPadKeysData[3176], PinchPadKeysData[4193], PinchPadKeysData[5392], PinchPadKeysData[2399], PinchPadKeysData[852], PinchPadKeysData[1510], PinchPadKeysData[3972], PinchPadKeysData[148], PinchPadKeysData[3927], PinchPadKeysData[452], PinchPadKeysData[3064], PinchPadKeysData[4878], PinchPadKeysData[3995], PinchPadKeysData[389], PinchPadKeysData[3327], PinchPadKeysData[5394], PinchPadKeysData[1139], PinchPadKeysData[5143], PinchPadKeysData[2755], PinchPadKeysData[588], PinchPadKeysData[3293], PinchPadKeysData[889], PinchPadKeysData[5267], PinchPadKeysData[4700], PinchPadKeysData[2256], PinchPadKeysData[1467], PinchPadKeysData[316], PinchPadKeysData[3438], PinchPadKeysData[1698], PinchPadKeysData[1142], PinchPadKeysData[2712], PinchPadKeysData[3943], PinchPadKeysData[2028], PinchPadKeysData[3832], PinchPadKeysData[3071], PinchPadKeysData[4706], PinchPadKeysData[5484], PinchPadKeysData[2620], PinchPadKeysData[2354], PinchPadKeysData[5826], PinchPadKeysData[1588], PinchPadKeysData[229], PinchPadKeysData[2898], PinchPadKeysData[3017], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2622], PinchPadKeysData[2952], PinchPadKeysData[898], PinchPadKeysData[4216], PinchPadKeysData[2557], PinchPadKeysData[413], PinchPadKeysData[2151], PinchPadKeysData[5098], PinchPadKeysData[3034], PinchPadKeysData[654], PinchPadKeysData[3749], PinchPadKeysData[5137], PinchPadKeysData[303], PinchPadKeysData[207], PinchPadKeysData[2221], PinchPadKeysData[3376], PinchPadKeysData[439], PinchPadKeysData[2713], PinchPadKeysData[1254], PinchPadKeysData[5669], PinchPadKeysData[2739], PinchPadKeysData[2694], PinchPadKeysData[2605], PinchPadKeysData[4335], PinchPadKeysData[4892], PinchPadKeysData[4554], PinchPadKeysData[1781], PinchPadKeysData[1388], PinchPadKeysData[1365], PinchPadKeysData[897], PinchPadKeysData[3804], PinchPadKeysData[5087], PinchPadKeysData[3743], PinchPadKeysData[1214], PinchPadKeysData[3778], PinchPadKeysData[4716], PinchPadKeysData[3228], PinchPadKeysData[1785], PinchPadKeysData[3485], PinchPadKeysData[5585], PinchPadKeysData[3368], PinchPadKeysData[4814], PinchPadKeysData[716], PinchPadKeysData[3698], PinchPadKeysData[4118], PinchPadKeysData[5043], PinchPadKeysData[5306], PinchPadKeysData[551], PinchPadKeysData[1401], PinchPadKeysData[5728], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4063], PinchPadKeysData[4990], PinchPadKeysData[4232], PinchPadKeysData[1437], PinchPadKeysData[3468], PinchPadKeysData[57], PinchPadKeysData[116], PinchPadKeysData[4828], PinchPadKeysData[5492], PinchPadKeysData[5091], PinchPadKeysData[4339], PinchPadKeysData[5742], PinchPadKeysData[10], PinchPadKeysData[355], PinchPadKeysData[1899], PinchPadKeysData[1426], PinchPadKeysData[2162], PinchPadKeysData[3190], PinchPadKeysData[653], PinchPadKeysData[313], PinchPadKeysData[5466], PinchPadKeysData[4182], PinchPadKeysData[4287], PinchPadKeysData[1812], PinchPadKeysData[2209], PinchPadKeysData[2215], PinchPadKeysData[951], PinchPadKeysData[5616], PinchPadKeysData[4446], PinchPadKeysData[3811], PinchPadKeysData[5203], PinchPadKeysData[2193], PinchPadKeysData[4110], PinchPadKeysData[5379], PinchPadKeysData[3951], PinchPadKeysData[1326], PinchPadKeysData[4084], PinchPadKeysData[455], PinchPadKeysData[5019], PinchPadKeysData[2417], PinchPadKeysData[5544], PinchPadKeysData[2276], PinchPadKeysData[2302], PinchPadKeysData[4761], PinchPadKeysData[4544], PinchPadKeysData[979], PinchPadKeysData[5135], PinchPadKeysData[457], PinchPadKeysData[1345], PinchPadKeysData[3108], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[5838] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
