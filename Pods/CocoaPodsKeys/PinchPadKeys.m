//
// Generated by CocoaPods-Keys
// on 18/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[4276], PinchPadKeysData[2094], PinchPadKeysData[3448], PinchPadKeysData[1966], PinchPadKeysData[2245], PinchPadKeysData[1059], PinchPadKeysData[2529], PinchPadKeysData[2269], PinchPadKeysData[4862], PinchPadKeysData[2253], PinchPadKeysData[2330], PinchPadKeysData[1130], PinchPadKeysData[65], PinchPadKeysData[797], PinchPadKeysData[4789], PinchPadKeysData[1715], PinchPadKeysData[2377], PinchPadKeysData[5139], PinchPadKeysData[5236], PinchPadKeysData[4335], PinchPadKeysData[4328], PinchPadKeysData[4257], PinchPadKeysData[1321], PinchPadKeysData[4557], PinchPadKeysData[4664], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[577], PinchPadKeysData[4865], PinchPadKeysData[3870], PinchPadKeysData[3829], PinchPadKeysData[4434], PinchPadKeysData[1623], PinchPadKeysData[4610], PinchPadKeysData[468], PinchPadKeysData[4477], PinchPadKeysData[2796], PinchPadKeysData[4418], PinchPadKeysData[3759], PinchPadKeysData[37], PinchPadKeysData[4269], PinchPadKeysData[2368], PinchPadKeysData[2407], PinchPadKeysData[1553], PinchPadKeysData[4095], PinchPadKeysData[1414], PinchPadKeysData[1696], PinchPadKeysData[1615], PinchPadKeysData[3633], PinchPadKeysData[492], PinchPadKeysData[2114], PinchPadKeysData[3292], PinchPadKeysData[788], PinchPadKeysData[5173], PinchPadKeysData[1318], PinchPadKeysData[4366], PinchPadKeysData[4823], PinchPadKeysData[3681], PinchPadKeysData[399], PinchPadKeysData[1837], PinchPadKeysData[2855], PinchPadKeysData[1570], PinchPadKeysData[568], PinchPadKeysData[3213], PinchPadKeysData[3427], PinchPadKeysData[637], PinchPadKeysData[2338], PinchPadKeysData[335], PinchPadKeysData[5210], PinchPadKeysData[902], PinchPadKeysData[3962], PinchPadKeysData[407], PinchPadKeysData[1252], PinchPadKeysData[1882], PinchPadKeysData[4087], PinchPadKeysData[4733], PinchPadKeysData[2468], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2237], PinchPadKeysData[2660], PinchPadKeysData[2657], PinchPadKeysData[4307], PinchPadKeysData[3695], PinchPadKeysData[1369], PinchPadKeysData[885], PinchPadKeysData[3123], PinchPadKeysData[3908], PinchPadKeysData[4953], PinchPadKeysData[3365], PinchPadKeysData[2717], PinchPadKeysData[3873], PinchPadKeysData[4288], PinchPadKeysData[2421], PinchPadKeysData[3689], PinchPadKeysData[3875], PinchPadKeysData[567], PinchPadKeysData[266], PinchPadKeysData[4885], PinchPadKeysData[523], PinchPadKeysData[801], PinchPadKeysData[4100], PinchPadKeysData[4776], PinchPadKeysData[2074], PinchPadKeysData[5273], PinchPadKeysData[1049], PinchPadKeysData[4520], PinchPadKeysData[4751], PinchPadKeysData[336], PinchPadKeysData[2184], PinchPadKeysData[4700], PinchPadKeysData[1928], PinchPadKeysData[4710], PinchPadKeysData[3982], PinchPadKeysData[582], PinchPadKeysData[3967], PinchPadKeysData[3667], PinchPadKeysData[1383], PinchPadKeysData[2645], PinchPadKeysData[2254], PinchPadKeysData[3023], PinchPadKeysData[187], PinchPadKeysData[2761], PinchPadKeysData[1708], PinchPadKeysData[4110], PinchPadKeysData[3638], PinchPadKeysData[796], PinchPadKeysData[3004], PinchPadKeysData[5197], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[359], PinchPadKeysData[3043], PinchPadKeysData[4908], PinchPadKeysData[52], PinchPadKeysData[1978], PinchPadKeysData[693], PinchPadKeysData[4879], PinchPadKeysData[2734], PinchPadKeysData[1650], PinchPadKeysData[4044], PinchPadKeysData[600], PinchPadKeysData[3735], PinchPadKeysData[4629], PinchPadKeysData[3405], PinchPadKeysData[3186], PinchPadKeysData[5278], PinchPadKeysData[3161], PinchPadKeysData[5322], PinchPadKeysData[3049], PinchPadKeysData[3545], PinchPadKeysData[3374], PinchPadKeysData[5019], PinchPadKeysData[1019], PinchPadKeysData[3094], PinchPadKeysData[4784], PinchPadKeysData[5362], PinchPadKeysData[2046], PinchPadKeysData[1897], PinchPadKeysData[5255], PinchPadKeysData[2476], PinchPadKeysData[2290], PinchPadKeysData[1634], PinchPadKeysData[480], PinchPadKeysData[53], PinchPadKeysData[1586], PinchPadKeysData[5161], PinchPadKeysData[2893], PinchPadKeysData[4363], PinchPadKeysData[1309], PinchPadKeysData[4840], PinchPadKeysData[3736], PinchPadKeysData[3490], PinchPadKeysData[1894], PinchPadKeysData[3915], PinchPadKeysData[4850], PinchPadKeysData[1764], PinchPadKeysData[406], PinchPadKeysData[3220], PinchPadKeysData[4261], PinchPadKeysData[884], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[5370] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
