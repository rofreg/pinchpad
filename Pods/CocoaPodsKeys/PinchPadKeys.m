//
// Generated by CocoaPods-Keys
// on 01/09/2018
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[669], PinchPadKeysData[4823], PinchPadKeysData[2060], PinchPadKeysData[1432], PinchPadKeysData[5378], PinchPadKeysData[3131], PinchPadKeysData[1380], PinchPadKeysData[4855], PinchPadKeysData[3253], PinchPadKeysData[5064], PinchPadKeysData[500], PinchPadKeysData[220], PinchPadKeysData[1690], PinchPadKeysData[3020], PinchPadKeysData[20], PinchPadKeysData[5636], PinchPadKeysData[1124], PinchPadKeysData[4078], PinchPadKeysData[4381], PinchPadKeysData[3630], PinchPadKeysData[2117], PinchPadKeysData[137], PinchPadKeysData[4945], PinchPadKeysData[3093], PinchPadKeysData[5633], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4598], PinchPadKeysData[5272], PinchPadKeysData[5679], PinchPadKeysData[2693], PinchPadKeysData[5527], PinchPadKeysData[188], PinchPadKeysData[3430], PinchPadKeysData[1744], PinchPadKeysData[4231], PinchPadKeysData[5136], PinchPadKeysData[1218], PinchPadKeysData[4280], PinchPadKeysData[845], PinchPadKeysData[4139], PinchPadKeysData[5350], PinchPadKeysData[2100], PinchPadKeysData[3499], PinchPadKeysData[4632], PinchPadKeysData[2967], PinchPadKeysData[5783], PinchPadKeysData[1633], PinchPadKeysData[2711], PinchPadKeysData[2789], PinchPadKeysData[1157], PinchPadKeysData[600], PinchPadKeysData[667], PinchPadKeysData[3287], PinchPadKeysData[3765], PinchPadKeysData[1946], PinchPadKeysData[381], PinchPadKeysData[5593], PinchPadKeysData[4116], PinchPadKeysData[65], PinchPadKeysData[3778], PinchPadKeysData[3697], PinchPadKeysData[1985], PinchPadKeysData[2610], PinchPadKeysData[698], PinchPadKeysData[2218], PinchPadKeysData[3568], PinchPadKeysData[5604], PinchPadKeysData[1578], PinchPadKeysData[5100], PinchPadKeysData[3843], PinchPadKeysData[5273], PinchPadKeysData[727], PinchPadKeysData[270], PinchPadKeysData[1307], PinchPadKeysData[4545], PinchPadKeysData[3283], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[3325], PinchPadKeysData[1868], PinchPadKeysData[5449], PinchPadKeysData[4502], PinchPadKeysData[2424], PinchPadKeysData[1672], PinchPadKeysData[5455], PinchPadKeysData[4987], PinchPadKeysData[4390], PinchPadKeysData[5191], PinchPadKeysData[1040], PinchPadKeysData[3987], PinchPadKeysData[2289], PinchPadKeysData[59], PinchPadKeysData[4361], PinchPadKeysData[4426], PinchPadKeysData[420], PinchPadKeysData[1973], PinchPadKeysData[563], PinchPadKeysData[4822], PinchPadKeysData[5065], PinchPadKeysData[2328], PinchPadKeysData[3569], PinchPadKeysData[495], PinchPadKeysData[2968], PinchPadKeysData[312], PinchPadKeysData[1915], PinchPadKeysData[4516], PinchPadKeysData[1804], PinchPadKeysData[5159], PinchPadKeysData[4890], PinchPadKeysData[3208], PinchPadKeysData[5684], PinchPadKeysData[2111], PinchPadKeysData[3248], PinchPadKeysData[889], PinchPadKeysData[4646], PinchPadKeysData[619], PinchPadKeysData[219], PinchPadKeysData[1324], PinchPadKeysData[3796], PinchPadKeysData[1062], PinchPadKeysData[5806], PinchPadKeysData[4705], PinchPadKeysData[5797], PinchPadKeysData[2503], PinchPadKeysData[5286], PinchPadKeysData[4354], PinchPadKeysData[3742], PinchPadKeysData[1910], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[258], PinchPadKeysData[2566], PinchPadKeysData[2827], PinchPadKeysData[395], PinchPadKeysData[1554], PinchPadKeysData[5466], PinchPadKeysData[31], PinchPadKeysData[885], PinchPadKeysData[4486], PinchPadKeysData[1314], PinchPadKeysData[1857], PinchPadKeysData[1674], PinchPadKeysData[5271], PinchPadKeysData[2015], PinchPadKeysData[1655], PinchPadKeysData[840], PinchPadKeysData[2228], PinchPadKeysData[5312], PinchPadKeysData[1511], PinchPadKeysData[4567], PinchPadKeysData[4262], PinchPadKeysData[706], PinchPadKeysData[4112], PinchPadKeysData[4406], PinchPadKeysData[3772], PinchPadKeysData[2011], PinchPadKeysData[2941], PinchPadKeysData[4849], PinchPadKeysData[1457], PinchPadKeysData[2917], PinchPadKeysData[340], PinchPadKeysData[253], PinchPadKeysData[4000], PinchPadKeysData[565], PinchPadKeysData[2822], PinchPadKeysData[1597], PinchPadKeysData[1189], PinchPadKeysData[597], PinchPadKeysData[2842], PinchPadKeysData[3286], PinchPadKeysData[1638], PinchPadKeysData[4737], PinchPadKeysData[4552], PinchPadKeysData[1710], PinchPadKeysData[1995], PinchPadKeysData[203], PinchPadKeysData[4135], PinchPadKeysData[1388], PinchPadKeysData[4617], PinchPadKeysData[4903], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[5838] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
