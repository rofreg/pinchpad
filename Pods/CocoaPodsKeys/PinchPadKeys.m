//
// Generated by CocoaPods-Keys
// on 18/08/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[5293], PinchPadKeysData[351], PinchPadKeysData[2956], PinchPadKeysData[5047], PinchPadKeysData[954], PinchPadKeysData[1938], PinchPadKeysData[299], PinchPadKeysData[6069], PinchPadKeysData[2465], PinchPadKeysData[1286], PinchPadKeysData[4716], PinchPadKeysData[209], PinchPadKeysData[2894], PinchPadKeysData[1610], PinchPadKeysData[1874], PinchPadKeysData[5573], PinchPadKeysData[5017], PinchPadKeysData[4843], PinchPadKeysData[5426], PinchPadKeysData[3477], PinchPadKeysData[4432], PinchPadKeysData[2483], PinchPadKeysData[4680], PinchPadKeysData[979], PinchPadKeysData[2274], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[5653], PinchPadKeysData[3891], PinchPadKeysData[2046], PinchPadKeysData[3039], PinchPadKeysData[4526], PinchPadKeysData[1786], PinchPadKeysData[6046], PinchPadKeysData[3806], PinchPadKeysData[4906], PinchPadKeysData[211], PinchPadKeysData[1321], PinchPadKeysData[5212], PinchPadKeysData[5530], PinchPadKeysData[2471], PinchPadKeysData[1716], PinchPadKeysData[553], PinchPadKeysData[977], PinchPadKeysData[4482], PinchPadKeysData[4423], PinchPadKeysData[823], PinchPadKeysData[2959], PinchPadKeysData[5819], PinchPadKeysData[2577], PinchPadKeysData[676], PinchPadKeysData[4884], PinchPadKeysData[265], PinchPadKeysData[1540], PinchPadKeysData[3134], PinchPadKeysData[4062], PinchPadKeysData[3701], PinchPadKeysData[1863], PinchPadKeysData[1526], PinchPadKeysData[5589], PinchPadKeysData[2852], PinchPadKeysData[5761], PinchPadKeysData[2013], PinchPadKeysData[2675], PinchPadKeysData[683], PinchPadKeysData[2026], PinchPadKeysData[2833], PinchPadKeysData[5480], PinchPadKeysData[5484], PinchPadKeysData[1837], PinchPadKeysData[5028], PinchPadKeysData[505], PinchPadKeysData[871], PinchPadKeysData[132], PinchPadKeysData[1325], PinchPadKeysData[2276], PinchPadKeysData[549], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4789], PinchPadKeysData[4532], PinchPadKeysData[4219], PinchPadKeysData[2262], PinchPadKeysData[3817], PinchPadKeysData[1574], PinchPadKeysData[5671], PinchPadKeysData[4312], PinchPadKeysData[4117], PinchPadKeysData[5269], PinchPadKeysData[2278], PinchPadKeysData[2481], PinchPadKeysData[216], PinchPadKeysData[4839], PinchPadKeysData[4792], PinchPadKeysData[4554], PinchPadKeysData[1331], PinchPadKeysData[5587], PinchPadKeysData[1597], PinchPadKeysData[1676], PinchPadKeysData[6022], PinchPadKeysData[3792], PinchPadKeysData[3015], PinchPadKeysData[3120], PinchPadKeysData[890], PinchPadKeysData[1955], PinchPadKeysData[4573], PinchPadKeysData[886], PinchPadKeysData[5703], PinchPadKeysData[5691], PinchPadKeysData[2144], PinchPadKeysData[2039], PinchPadKeysData[3112], PinchPadKeysData[1848], PinchPadKeysData[4579], PinchPadKeysData[3683], PinchPadKeysData[746], PinchPadKeysData[2975], PinchPadKeysData[1885], PinchPadKeysData[2949], PinchPadKeysData[4487], PinchPadKeysData[488], PinchPadKeysData[2505], PinchPadKeysData[4948], PinchPadKeysData[4609], PinchPadKeysData[4458], PinchPadKeysData[3812], PinchPadKeysData[3737], PinchPadKeysData[52], PinchPadKeysData[756], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[1091], PinchPadKeysData[3621], PinchPadKeysData[176], PinchPadKeysData[5228], PinchPadKeysData[2001], PinchPadKeysData[5394], PinchPadKeysData[3672], PinchPadKeysData[1616], PinchPadKeysData[4980], PinchPadKeysData[679], PinchPadKeysData[4231], PinchPadKeysData[4833], PinchPadKeysData[4590], PinchPadKeysData[1050], PinchPadKeysData[496], PinchPadKeysData[4123], PinchPadKeysData[5247], PinchPadKeysData[1223], PinchPadKeysData[4028], PinchPadKeysData[5512], PinchPadKeysData[3396], PinchPadKeysData[4506], PinchPadKeysData[338], PinchPadKeysData[1524], PinchPadKeysData[5172], PinchPadKeysData[5983], PinchPadKeysData[3844], PinchPadKeysData[318], PinchPadKeysData[2574], PinchPadKeysData[1128], PinchPadKeysData[2665], PinchPadKeysData[2733], PinchPadKeysData[5946], PinchPadKeysData[4512], PinchPadKeysData[1581], PinchPadKeysData[4079], PinchPadKeysData[1403], PinchPadKeysData[4503], PinchPadKeysData[1117], PinchPadKeysData[1454], PinchPadKeysData[47], PinchPadKeysData[1122], PinchPadKeysData[5646], PinchPadKeysData[5596], PinchPadKeysData[3763], PinchPadKeysData[3922], PinchPadKeysData[397], PinchPadKeysData[3181], PinchPadKeysData[4613], PinchPadKeysData[1136], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[6070] = "jF5pC/pcywZG1Un2jLpzs7BbzAe+0+inOBwIaKoOVLB1OJa4V9MAOep1xPHGcWDcdxc6scO9MBkIXymrLu1iOojlPrBTGHa5IfhEfWH9kzfkklKvZO4kgAupQLMtomu1NIchLB8EM2AqrCFnOiiKa107XLteS5qWbgHXp+Dc24YK8002SM5lUA6/4z6g76BsgbZqwsoUH4tiL/UhY8sJCDnuXCOIaul338+y0lwHW4oZo9xzIWVipBv2gzl5kSXzV7u/9zzqlRyVv3VULlrWjehG8PIR/Z2uX+SDVd+DRGwtKUvaDrQHi7qRWzUO/pquMlBqzxOn2ednjQzNhcggCYRx8YEuWuPrJszEBl+ULzuQpSxsDK2n6jJjWpmz1Ifg+ciQgFGkeEvh8ccg+TgtE9vx3ctRGkr7ZE1O27Zpzq5ZL9VCYZ9/gy4f4zaRarR+UjK/m/u+mIRK0ntXuOCnNgVWW2XT7hfQRP4SOsx1nTbfFjQJPR5kaKZjvIu/uyIbGh73Bu1bg2w/NT6+I1WPSVSyKdF4XMmh/tn519N1a4idNKpUZXIVb8RMmePuKuW+7pRvGq8eTjz9KQQtp5uT4wopEZjG4Q5AI0cFT0vvEHUjRaZJnYoIY0G91n6BybI+DKVcfouoRzQF1sxlI+KHVsLg2sKCDN+fjImTSg+JtLUdeqsh97XhW5rXCEqHfe5/2jPkMaTtJmnosx6VAgoCPh+oWjQrzcrbW1qTQRMxw0LkRGNOcrSBBjFnEIlyY9fe7ZtpxxV4WE7GELPYK47Lrn2zjERsqOlR3M/Y5Yl2TB85kQASOLxc3DH88EJtrNZPheLMlxa/sXyk7BtK5eHQ7/rbkHTMJikczA1rgmiwox4hn5gieZq9LupKPlTlni+bLwO3b+lN678HysGflVBW2aR9FgKCjW4KkzyDFqgsBpusAtGRM7O7G4EdTVK4/8RM/tBa9nEItA9awycBEAnal1DQMxWevrxTVaw+4AIsFS0G9vufBiF9yzvdZMfhXWueHoQQ2N/bJRkwC8ZEg5B+47owIEEmEjw8HZXfRp+5l+1mkFkimxI0qHNAagdY1UnjN+RFSUFeDIeP9RzQm8YMkMO5WJ4h3c3hbHKpOJyE5MZfYnMdFJCD7QoFjURDlv5X9LcEE7VVFkcqf5sDFtbiAgE8h77qyrZoys1CqXOwJJl1BtbKw+z8pv/wvJ8cjOGfNSKjJ+ttJpWnzhzwMmJQ/mwh67TqvMAQWiSiMsxAF9VpyzxXYCrhGqoWSXI9atxXLQUtm6x9pSLjFN//o1Pyi5Z+V6D6os1R9WvrLRdNqj8niUQ3bUwlXbTY/yiZQJgEKdEWnO4THF1be5t/dulkl0709/cntpyG2vkK6w/X8vKzSHcvSBBhCzJJURaMoUZrmX2PozyLyASMPFyTY+IvzZ0PoZE69LWaxoQV5D6322j3DMtE5+5pAf2CLOxLPIkpjRL1Ss+mkn0euzwrzls6I2zrvS6blJqY/wOznpl7I45aHkBQyO8hZ6klddliu9wQ/xVr5uFwdAYPE3ctA7UH7Fmh9taDffPGFwzNQhEtlOfCt31hJuelAaSx3+ThJ7ZkByUxFGOmmyXVTXrnWrNtSBaCf5kDivcjuQCDCKvqpp/rJU998kLrslAGDOo2OC1o2oF7GzCC+6BAKa3QSKzyONasUjQe/TyeWLhJm7LVI6oJ9gYJHfKQynRkaRk6B8RIjPq22rXco9Iirp8cTv+SKzybYX3p/jt0Mny8sM5nNwIENSS+33PkHvoRnjzqYlO82M10+J/gGjX4Fs/3C3uNbyJQFumL1TJBDK9RHeeNcx2JjXaoHVXzdpvSWVDiDPoF3SRy/3vOTTQMmzw8WxMnmlhp+f7s75t5HrjMdniX7mX+W0CmjB7GA38REV0Cfb9St4O3ElK9EOruxA/Qsb3sseTBOT4fCQbSeUm2ahk9Q9OFkgXbue4b2A2sfpmbbJ/4rKnMBCroBizCJcXVu2t24DDTLNan/Ewx6SafX1pmZ8O7hEVGZ4DtvsOUck9XzJPScv3rhwGb9tjNxEnMwERyc46ErcmZNOpzHPOrllRBMjwJWY0TdakCbCey+0cFp8yxGTlKu5KBYU26bLQFiTjHzpRliPkqdgj4kphe8oBmZ33lI7nrkpHV+jDRQcCr8zPqV9VHtDh0RiCZwrlxap4+6dAjPmeKf0O6rBj4UvtnCX7mjaLhRUt8oLsmUEsVkXH4Imlw/TFh4jSBrv3US/F/tu16Pip5uElsMP20zGh6nstpX9Q0vJZANtSdMlR4B4f5hSybCK1a+NY6DXEV7Phr/bKIjoRLYgT0BCyPcPTORL4ME1UBEs71zHx2hu8HmEjNoyN5qqPvi38zIpdbudoaNnP7/YOBUIvvy7ngLIay9lmI6lkgDY1O0GcjW3C8+Y0qM58lcpmogptZAlGMf5qJNGRo4lrY9Bo4frKGK7MoW44F0UzIRI2YuFyT8GgJMcaiO/3PxVlFtQLTLxVc7O1OAdT/+Y4Y/l/+Swljv+utaUBqtZZ9Aq7sETJLj6FLbTCq3T/IY9W1D6CWlN5Y9BsqRB5UpERzYh32LpzdcK7B4TiUHPK1bb/HoARLZLYKSJHyauKLF6DSK3XAI+b/hDFxJTf2WYdntxiAj5Wd2boh3fq4gTJdbVBOIREdD6hxjXGKoKI0+mCEncRQbntP7PpdbDi3HY3FICkg3W68eiPb6zYMLL5ZlWSjO8Jf0aOBiR3VHpKY7K0S9TTbxRDomdT4FG/sHWl8xw7pq1M8WKoUehGPvwGNkFyN+1UtXle1mUm/rghqSel112/QaNMDlwWyKiZzzlnB2LIq/fvkvsj0sXQyRRTcUlJn/b1gXCpjtYKhvkWWuGOvg23UBzlB36o3+KTpuzlTEkaANw4dGsKsMPa6AkERJhMMUXf+VHAFHiRyz46EX8LkcU3jDTDs33w6MuM7Y/KH4M1V6A6ZthCPEGzItFtXbBRGzQyCK2AE/1BQs9safN5upAkAMq4kiDfYoXNDoR/3un95Ufv50jU5aK+x6Y3v1dlzyU2M6NjraaIwVanzwTVqgtSZpCXFQrnipFk2HOvdRcl5/5asTkOPkmrgzXuInBdPcZfNEdV+6lSVyFpT//BvonpWAdRPZIKCd+BYF8HlpEGg4CpykyCEqo7DqxkDD7cSLjGHQCZJ7p3ZC2RpmMEKuyrGKhTGps+B+sF2dA+S1a6U7RjFNVIAFfmN9TqQUwwuo1C26oJyy0U99mQGJewOP8QmD0vGg+Evp1pMy929llUEOg36EaAFjUvX87Wh3IhulzSPYoWHeQAA1KXEUZ7WOfyF9wwp+8DV0dP5eEjcS04+Xi6246D3H8ksmjwnAm+REftY/+x8E/Gm15rKR6BO8pxFHLn1IdnjeVw6BVDppNhqbxEgTiMevCuVK3QU0idRxGQcKRLZIHLCDOAU0h30BI+rTJpXkPxer27AHM/x1mqTXbGIBSj8qOkDd1qsuozTKTO66NZPt2sDsZF6OxIZrDwrUky4DCCfFCbrg3rIRD5Rkre4JXeKhO42vcvnh0huOJrlJL3TrWM/qoi7ZluMJ1yHKiF1W1X3MtmaU7N/qGVht5TelbJwFvprS5OJfSbHZho30c8pG0L55BoR7yfNeROAuK3BS+tlWzYuLJgvGc8tcGRhZFLR7DyYw0f8ZE+ddZ6XlxR3eUHHGV3j2XBxsJ9eOWBxpER4NYiOMewPCf+fFbYzLwxYenVH0QxDcY9I0oSazSFz1CSw029CgvNgWd8sq0U1Ds180iD2i7rANNWpqDYNTCjXppUv/UAvaooC918XHB+YvwBQA+qzQgjyioHrFSPoX5xLOra12h9G0EWclFxvY1WGpiLH1F3CVttAnaHhJXIECr/nDpzVlTFDUPbT80UQy9B1dMpwtU3OSOedaymX98Zm2B5fIer90DU4w6/UwSJ9j3bjGSjgD6ZPNWqskZksWizkhqs2+40Va/Sr8Du3uh6ndZgFiEvtuAOHW6JCm4Of8qtNb54mZjEMoqHemnZJHphkuZWdVnJbvLuGCaSZHnte7NeR/v+hV/tQpJqzgGEBBDxitRc5OMvCEeRg0AB+khHgoTXvJEYp5i/nPyXU/FAi3Rz4fouQGpsM000FcCFyr76iObJjAj3nZSwW8VBDB5GM0tdbxLYFWszCJ/AhXh/QA8I9qst8yOTRPYQcegauBb/GXFOhsR8O6aMmsZxamQuKlgk0JriXyCEyUYXykHNZaR0rEdM73+OXO/gzrg07wEwIHs5M7/5gRJjTPVmThEIEzReuQIH4BE0Lh0z5Ttq1L8D7gVMRw9N4REcmHmIPF7SOQcaA7BBQwEKtfFUZk+IhWb9Gm+Bq6bCJNL8NSR1VNmlKeK6NNZZnpWRSW2AS6+xR0JD8mUQqsOpmCunbkVeK813V1u1DWZ+VI81IlP/njqTTe90j6Y6i5e3B3WY+8xbjPHR7UJO4ie040XWviaOZCqqmXAViZqrEsyba2omneyn3XpzrmP+2wEsXDT5B1XKdSrjVxRwcQPBrBRZjfBWz+gTszvMGVEUO1bUdx6D+CPyJBbVSP2jhvS3zJgaXIf113mlWd8NwN9ottUP4pObiGTcK3ziYyQkqsK5vY+lM1LYWu9kbiL6jpxPQBToyymSqey7DLabGmqvOayXeso1n9X6NP6b5O/L3HD+fnv2AHHoglGbR5oS2rrUywKizmDUSeIjkKzg+OKBbGMrzVs8Af91xqTY6Ham/wtiiF/72m6kgCdiYRY7u40r6eRHhh91bQsEIDFjai1izKvgy+d/HrJ5cR2iBcfdic6lkLLn8P8IGurpgHHYCg46cmi8l8PVzvJ32/K3brWWDjAZ0JDIipbJL9XjlUm5/wAS3245rwpvM+bwZOg6dFSCwzpf31IDCvOAb0DBzYo9cQmIFkGHyBvt+JlSwCl64DF+te1BkeNCRfGVYfdgVLfkPgqHg5ZGw1GiCpYpzvBQIxkIhamA84GTB4dbaNeiaNEIeNozvqZnqWPHfpyzacPBrDeYkEzIzN76UxqNdHk2mxqyJBtKnfmphDl38Dbsgn7sZyxYkc72U7GYtGYsTsUjE6DOwqj0gKUM3NkUtQNSoI7IWpl+awkzYS/yebcyG4z8MLM4AkTYeoXDJLW1H7vjJQNGUKak85cj92j1/NYkbbGbCsOnWjbxEp4/uBWcJmUnFnkoKl258pPsqLplbl3z5ozZKWvD0j2U1h0oMqP5buATqZeVXoVUQAtWHb+5997m5jY3mGkFv9OW1ZGdsA4gI+MdeEyg/2DYOoh2sUXFaGF1qpNoYA1GTObxJlBIe0funwLdhvdtGnO8sGucCOfN1kWoYHbRPYTO8Yx4XgLaWTuZ74Li0QKjEszg/tM7gaJ8kixDKDCUwUQOIET5lhEspd0IugDcaEW1bfL8Hk19abHAl7raIMkM9IsvPoDb0yYbSW7akIeH/2hT8n2s1Pcl209X3mJZh8mu3Nz2YnVQID5aSWHtYO2JWkaL76gRP4PfEScXwPb/gjLM5EHFCv8KIzmvIxsgnLsHLHf/dh0x39uQVl81S8xP17MzJpslvyfp7+MdIwXgh/w/2LD5B1loPwHzdI/7UfNhzvXxigzr6aQylm0fquIyPDKwNYZEHmMd/93cdSf7I+5WfK+muBmrEpZNtdPWqVEIoB/bnNRvWm+33NYXlxgWaTPBcRbV9FfIHB15f7BA73Hq1pFBPCwPBgKrRlkyd1nKAduCIiK/dzHnZtHj2IUZw+Gjd4oedbX6gu4CcgcSkHFhdmLZ3uyawZYC9dSJ6/X0yeXFZiG8Am5SKZAqGXe7x38LSEIJOn8LlyozyhlkRR5kbkwSZz9yE8dDbMb8hdjxcHLpTQdc7yUK0S/KiiQCSIEvxiN3t29kj+pJXkaRvDbboIhnw565qQmQTAfQz95K39pJm4n9vUd3UqPSVMtW73tmMRdZhGxXjB0R72rZki4QuYGqfEY0hW78NbsJRrp9577PjsCZrBp6IcOPDQ8lMywJNuJ410RWWrCAtpalgt+N5cO4=\\p";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
