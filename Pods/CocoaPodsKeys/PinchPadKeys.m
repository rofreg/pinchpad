//
// Generated by CocoaPods-Keys
// on 12/06/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[3232], PinchPadKeysData[2140], PinchPadKeysData[3976], PinchPadKeysData[6705], PinchPadKeysData[4326], PinchPadKeysData[980], PinchPadKeysData[4128], PinchPadKeysData[2227], PinchPadKeysData[5242], PinchPadKeysData[3699], PinchPadKeysData[4344], PinchPadKeysData[1315], PinchPadKeysData[4697], PinchPadKeysData[5847], PinchPadKeysData[5937], PinchPadKeysData[3920], PinchPadKeysData[5722], PinchPadKeysData[189], PinchPadKeysData[933], PinchPadKeysData[5770], PinchPadKeysData[3304], PinchPadKeysData[4674], PinchPadKeysData[815], PinchPadKeysData[6747], PinchPadKeysData[6234], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[4380], PinchPadKeysData[886], PinchPadKeysData[2844], PinchPadKeysData[1588], PinchPadKeysData[5613], PinchPadKeysData[6020], PinchPadKeysData[3356], PinchPadKeysData[5124], PinchPadKeysData[4258], PinchPadKeysData[713], PinchPadKeysData[2092], PinchPadKeysData[5995], PinchPadKeysData[2199], PinchPadKeysData[5377], PinchPadKeysData[944], PinchPadKeysData[4248], PinchPadKeysData[3122], PinchPadKeysData[5518], PinchPadKeysData[3878], PinchPadKeysData[4740], PinchPadKeysData[6422], PinchPadKeysData[5799], PinchPadKeysData[3233], PinchPadKeysData[616], PinchPadKeysData[5259], PinchPadKeysData[3854], PinchPadKeysData[3555], PinchPadKeysData[2350], PinchPadKeysData[4562], PinchPadKeysData[511], PinchPadKeysData[4617], PinchPadKeysData[736], PinchPadKeysData[2502], PinchPadKeysData[5380], PinchPadKeysData[5666], PinchPadKeysData[6187], PinchPadKeysData[956], PinchPadKeysData[2731], PinchPadKeysData[6369], PinchPadKeysData[1934], PinchPadKeysData[6237], PinchPadKeysData[3203], PinchPadKeysData[4988], PinchPadKeysData[1000], PinchPadKeysData[5270], PinchPadKeysData[6185], PinchPadKeysData[6676], PinchPadKeysData[1024], PinchPadKeysData[4923], PinchPadKeysData[798], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[3056], PinchPadKeysData[2750], PinchPadKeysData[2238], PinchPadKeysData[5325], PinchPadKeysData[1239], PinchPadKeysData[5208], PinchPadKeysData[5622], PinchPadKeysData[2009], PinchPadKeysData[1345], PinchPadKeysData[4174], PinchPadKeysData[3653], PinchPadKeysData[1049], PinchPadKeysData[2758], PinchPadKeysData[5316], PinchPadKeysData[278], PinchPadKeysData[3062], PinchPadKeysData[5132], PinchPadKeysData[3302], PinchPadKeysData[4719], PinchPadKeysData[896], PinchPadKeysData[3011], PinchPadKeysData[2557], PinchPadKeysData[2093], PinchPadKeysData[4138], PinchPadKeysData[1305], PinchPadKeysData[2263], PinchPadKeysData[5452], PinchPadKeysData[4381], PinchPadKeysData[6047], PinchPadKeysData[2055], PinchPadKeysData[3526], PinchPadKeysData[4711], PinchPadKeysData[2846], PinchPadKeysData[4113], PinchPadKeysData[1867], PinchPadKeysData[597], PinchPadKeysData[4193], PinchPadKeysData[1342], PinchPadKeysData[3870], PinchPadKeysData[5121], PinchPadKeysData[3791], PinchPadKeysData[1409], PinchPadKeysData[4286], PinchPadKeysData[5806], PinchPadKeysData[6550], PinchPadKeysData[4345], PinchPadKeysData[1282], PinchPadKeysData[6500], PinchPadKeysData[6740], PinchPadKeysData[3928], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2387], PinchPadKeysData[5723], PinchPadKeysData[4171], PinchPadKeysData[1820], PinchPadKeysData[2178], PinchPadKeysData[3509], PinchPadKeysData[320], PinchPadKeysData[2027], PinchPadKeysData[6727], PinchPadKeysData[5805], PinchPadKeysData[2803], PinchPadKeysData[4800], PinchPadKeysData[5220], PinchPadKeysData[2828], PinchPadKeysData[2954], PinchPadKeysData[988], PinchPadKeysData[3649], PinchPadKeysData[2104], PinchPadKeysData[963], PinchPadKeysData[5800], PinchPadKeysData[3017], PinchPadKeysData[4746], PinchPadKeysData[116], PinchPadKeysData[786], PinchPadKeysData[4783], PinchPadKeysData[5589], PinchPadKeysData[3418], PinchPadKeysData[5332], PinchPadKeysData[4376], PinchPadKeysData[2274], PinchPadKeysData[3529], PinchPadKeysData[6392], PinchPadKeysData[1626], PinchPadKeysData[863], PinchPadKeysData[238], PinchPadKeysData[528], PinchPadKeysData[2508], PinchPadKeysData[849], PinchPadKeysData[5031], PinchPadKeysData[4028], PinchPadKeysData[1316], PinchPadKeysData[3278], PinchPadKeysData[392], PinchPadKeysData[4509], PinchPadKeysData[4247], PinchPadKeysData[5193], PinchPadKeysData[2788], PinchPadKeysData[3241], PinchPadKeysData[4297], PinchPadKeysData[842], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[6770] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
