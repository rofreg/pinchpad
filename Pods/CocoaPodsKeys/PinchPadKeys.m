//
// Generated by CocoaPods-Keys
// on 21/09/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[3013], PinchPadKeysData[6238], PinchPadKeysData[4646], PinchPadKeysData[6513], PinchPadKeysData[1372], PinchPadKeysData[1082], PinchPadKeysData[850], PinchPadKeysData[4456], PinchPadKeysData[4099], PinchPadKeysData[4175], PinchPadKeysData[689], PinchPadKeysData[2705], PinchPadKeysData[4329], PinchPadKeysData[6504], PinchPadKeysData[1068], PinchPadKeysData[2431], PinchPadKeysData[1318], PinchPadKeysData[600], PinchPadKeysData[4362], PinchPadKeysData[4357], PinchPadKeysData[2741], PinchPadKeysData[1994], PinchPadKeysData[2973], PinchPadKeysData[4694], PinchPadKeysData[1277], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2736], PinchPadKeysData[3870], PinchPadKeysData[1599], PinchPadKeysData[56], PinchPadKeysData[2635], PinchPadKeysData[2009], PinchPadKeysData[564], PinchPadKeysData[3130], PinchPadKeysData[1917], PinchPadKeysData[3244], PinchPadKeysData[4878], PinchPadKeysData[4728], PinchPadKeysData[5507], PinchPadKeysData[2643], PinchPadKeysData[6282], PinchPadKeysData[3135], PinchPadKeysData[4649], PinchPadKeysData[583], PinchPadKeysData[2357], PinchPadKeysData[4509], PinchPadKeysData[1786], PinchPadKeysData[893], PinchPadKeysData[2410], PinchPadKeysData[3031], PinchPadKeysData[4113], PinchPadKeysData[5815], PinchPadKeysData[3853], PinchPadKeysData[5940], PinchPadKeysData[5976], PinchPadKeysData[4912], PinchPadKeysData[6437], PinchPadKeysData[5703], PinchPadKeysData[4353], PinchPadKeysData[6], PinchPadKeysData[3743], PinchPadKeysData[6204], PinchPadKeysData[1169], PinchPadKeysData[5422], PinchPadKeysData[281], PinchPadKeysData[5031], PinchPadKeysData[2725], PinchPadKeysData[884], PinchPadKeysData[1311], PinchPadKeysData[6188], PinchPadKeysData[4275], PinchPadKeysData[5899], PinchPadKeysData[3116], PinchPadKeysData[1110], PinchPadKeysData[1495], PinchPadKeysData[391], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[3418], PinchPadKeysData[3517], PinchPadKeysData[3607], PinchPadKeysData[5364], PinchPadKeysData[3178], PinchPadKeysData[3728], PinchPadKeysData[1545], PinchPadKeysData[217], PinchPadKeysData[5311], PinchPadKeysData[1185], PinchPadKeysData[3718], PinchPadKeysData[1175], PinchPadKeysData[3209], PinchPadKeysData[322], PinchPadKeysData[5426], PinchPadKeysData[5014], PinchPadKeysData[4585], PinchPadKeysData[3016], PinchPadKeysData[4927], PinchPadKeysData[5307], PinchPadKeysData[2308], PinchPadKeysData[47], PinchPadKeysData[1253], PinchPadKeysData[4738], PinchPadKeysData[5570], PinchPadKeysData[4183], PinchPadKeysData[3564], PinchPadKeysData[2755], PinchPadKeysData[566], PinchPadKeysData[4067], PinchPadKeysData[2648], PinchPadKeysData[6399], PinchPadKeysData[1398], PinchPadKeysData[249], PinchPadKeysData[3727], PinchPadKeysData[5605], PinchPadKeysData[601], PinchPadKeysData[4691], PinchPadKeysData[3617], PinchPadKeysData[5066], PinchPadKeysData[4405], PinchPadKeysData[3022], PinchPadKeysData[6236], PinchPadKeysData[2152], PinchPadKeysData[2570], PinchPadKeysData[1523], PinchPadKeysData[5053], PinchPadKeysData[6190], PinchPadKeysData[5597], PinchPadKeysData[2551], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[1652], PinchPadKeysData[1030], PinchPadKeysData[6465], PinchPadKeysData[5697], PinchPadKeysData[2955], PinchPadKeysData[5057], PinchPadKeysData[1527], PinchPadKeysData[1444], PinchPadKeysData[5244], PinchPadKeysData[6323], PinchPadKeysData[2628], PinchPadKeysData[4780], PinchPadKeysData[2708], PinchPadKeysData[4103], PinchPadKeysData[1393], PinchPadKeysData[5278], PinchPadKeysData[4042], PinchPadKeysData[5491], PinchPadKeysData[1254], PinchPadKeysData[5182], PinchPadKeysData[2376], PinchPadKeysData[4164], PinchPadKeysData[2149], PinchPadKeysData[2627], PinchPadKeysData[3482], PinchPadKeysData[783], PinchPadKeysData[2847], PinchPadKeysData[1041], PinchPadKeysData[4223], PinchPadKeysData[3312], PinchPadKeysData[4345], PinchPadKeysData[1182], PinchPadKeysData[5312], PinchPadKeysData[5380], PinchPadKeysData[1757], PinchPadKeysData[4426], PinchPadKeysData[1638], PinchPadKeysData[2793], PinchPadKeysData[1325], PinchPadKeysData[5964], PinchPadKeysData[1947], PinchPadKeysData[514], PinchPadKeysData[5708], PinchPadKeysData[2809], PinchPadKeysData[3915], PinchPadKeysData[4843], PinchPadKeysData[624], PinchPadKeysData[3996], PinchPadKeysData[3875], PinchPadKeysData[4957], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[6538] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
