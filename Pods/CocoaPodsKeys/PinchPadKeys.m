//
// Generated by CocoaPods-Keys
// on 08/09/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PinchPadKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PinchPadKeys

  @dynamic twitterConsumerKey;
  @dynamic twitterConsumerSecret;
  @dynamic tumblrConsumerKey;
  @dynamic tumblrConsumerSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PinchPadKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"tumblrConsumerKey"]) {
    implementation = _podKeysd72a745f7f41861f66639426f56b75c6;
  }

  if ([key isEqualToString:@"tumblrConsumerSecret"]) {
    implementation = _podKeys60ff2bf47c23e3c000af83aa4b4fb75a;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { PinchPadKeysData[3042], PinchPadKeysData[482], PinchPadKeysData[5685], PinchPadKeysData[4424], PinchPadKeysData[2893], PinchPadKeysData[968], PinchPadKeysData[5408], PinchPadKeysData[3786], PinchPadKeysData[4630], PinchPadKeysData[276], PinchPadKeysData[2545], PinchPadKeysData[3975], PinchPadKeysData[3838], PinchPadKeysData[3433], PinchPadKeysData[3031], PinchPadKeysData[3160], PinchPadKeysData[516], PinchPadKeysData[4785], PinchPadKeysData[5631], PinchPadKeysData[2006], PinchPadKeysData[5873], PinchPadKeysData[2579], PinchPadKeysData[1570], PinchPadKeysData[3950], PinchPadKeysData[5265], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[140], PinchPadKeysData[868], PinchPadKeysData[1194], PinchPadKeysData[1881], PinchPadKeysData[1806], PinchPadKeysData[2008], PinchPadKeysData[4697], PinchPadKeysData[4036], PinchPadKeysData[1126], PinchPadKeysData[5401], PinchPadKeysData[2606], PinchPadKeysData[5389], PinchPadKeysData[2835], PinchPadKeysData[4027], PinchPadKeysData[5165], PinchPadKeysData[1822], PinchPadKeysData[5057], PinchPadKeysData[4634], PinchPadKeysData[1120], PinchPadKeysData[1679], PinchPadKeysData[1772], PinchPadKeysData[2002], PinchPadKeysData[2742], PinchPadKeysData[2669], PinchPadKeysData[4208], PinchPadKeysData[5420], PinchPadKeysData[5897], PinchPadKeysData[3034], PinchPadKeysData[153], PinchPadKeysData[228], PinchPadKeysData[1532], PinchPadKeysData[2120], PinchPadKeysData[706], PinchPadKeysData[4074], PinchPadKeysData[2879], PinchPadKeysData[2625], PinchPadKeysData[1931], PinchPadKeysData[2108], PinchPadKeysData[3942], PinchPadKeysData[1302], PinchPadKeysData[2815], PinchPadKeysData[4276], PinchPadKeysData[670], PinchPadKeysData[4375], PinchPadKeysData[233], PinchPadKeysData[102], PinchPadKeysData[1172], PinchPadKeysData[2834], PinchPadKeysData[2646], PinchPadKeysData[5215], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysd72a745f7f41861f66639426f56b75c6(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[3438], PinchPadKeysData[4734], PinchPadKeysData[4704], PinchPadKeysData[4289], PinchPadKeysData[2349], PinchPadKeysData[5299], PinchPadKeysData[817], PinchPadKeysData[5737], PinchPadKeysData[3039], PinchPadKeysData[2793], PinchPadKeysData[5830], PinchPadKeysData[885], PinchPadKeysData[2075], PinchPadKeysData[3448], PinchPadKeysData[3641], PinchPadKeysData[3537], PinchPadKeysData[5928], PinchPadKeysData[5661], PinchPadKeysData[3418], PinchPadKeysData[5895], PinchPadKeysData[3733], PinchPadKeysData[3904], PinchPadKeysData[1161], PinchPadKeysData[4742], PinchPadKeysData[2759], PinchPadKeysData[3584], PinchPadKeysData[1770], PinchPadKeysData[4675], PinchPadKeysData[1726], PinchPadKeysData[5123], PinchPadKeysData[4755], PinchPadKeysData[3145], PinchPadKeysData[5494], PinchPadKeysData[1433], PinchPadKeysData[2245], PinchPadKeysData[1691], PinchPadKeysData[3130], PinchPadKeysData[4814], PinchPadKeysData[3973], PinchPadKeysData[4640], PinchPadKeysData[4921], PinchPadKeysData[5651], PinchPadKeysData[875], PinchPadKeysData[1109], PinchPadKeysData[4715], PinchPadKeysData[1972], PinchPadKeysData[1692], PinchPadKeysData[4737], PinchPadKeysData[5312], PinchPadKeysData[2849], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys60ff2bf47c23e3c000af83aa4b4fb75a(PinchPadKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { PinchPadKeysData[2295], PinchPadKeysData[3753], PinchPadKeysData[928], PinchPadKeysData[1275], PinchPadKeysData[122], PinchPadKeysData[3545], PinchPadKeysData[3775], PinchPadKeysData[2043], PinchPadKeysData[3819], PinchPadKeysData[1397], PinchPadKeysData[2063], PinchPadKeysData[4650], PinchPadKeysData[661], PinchPadKeysData[2020], PinchPadKeysData[1159], PinchPadKeysData[3785], PinchPadKeysData[4489], PinchPadKeysData[5535], PinchPadKeysData[2504], PinchPadKeysData[5454], PinchPadKeysData[1693], PinchPadKeysData[6001], PinchPadKeysData[5527], PinchPadKeysData[3860], PinchPadKeysData[2499], PinchPadKeysData[2539], PinchPadKeysData[2648], PinchPadKeysData[1495], PinchPadKeysData[938], PinchPadKeysData[5865], PinchPadKeysData[1619], PinchPadKeysData[5481], PinchPadKeysData[3971], PinchPadKeysData[4000], PinchPadKeysData[4211], PinchPadKeysData[3407], PinchPadKeysData[3016], PinchPadKeysData[4788], PinchPadKeysData[5588], PinchPadKeysData[2623], PinchPadKeysData[2543], PinchPadKeysData[6038], PinchPadKeysData[1828], PinchPadKeysData[1745], PinchPadKeysData[1102], PinchPadKeysData[4501], PinchPadKeysData[2163], PinchPadKeysData[3718], PinchPadKeysData[1052], PinchPadKeysData[2548], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PinchPadKeysData[6070] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"tumblrConsumerKey": self.tumblrConsumerKey,
            @"tumblrConsumerSecret": self.tumblrConsumerSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
